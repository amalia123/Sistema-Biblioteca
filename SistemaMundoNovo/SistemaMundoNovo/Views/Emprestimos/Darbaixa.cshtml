@model SistemaMundoNovo.Models.Emprestimo

@{
    ViewBag.Title = "Dar baixa";
}

<h2>Dar baixa em Emprestimo</h2>


@using (Html.BeginForm("Delete", "Emprestimos", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EmprestimoId)

    <div class="form-group">
        @Html.LabelFor(model => model.Livro.titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Livro.titulo, new { htmlAttributes = new { @class = "form-control", @disable = "" } })
            @Html.ValidationMessageFor(model => model.Livro.titulo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <span class="h4">
            Valor sugerido: @{
                TimeSpan date = DateTime.Now - DateTime.Parse(Model.DataPrazo);
                int totalDias = date.Days;
                double valorSugerido = Model.Valor + (Model.Valor * 0.1 * totalDias);
            }
            @valorSugerido
        </span>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataPrazo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataPrazo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataPrazo, "", new { @class = "text-danger" })
            @{
                if (Model.DataDevolucao == null)
                {
                    if (DateTime.Parse(Model.DataPrazo) < DateTime.Now)
                    {
                        <span>Atrasado</span>
                        <input type="hidden" value="2" name="status" id="status" />
                    }
                    else
                    {
                        <span>Pendente</span>
                        <input type="hidden" value="1" name="status" id="status" />
                    }
                }
            }
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Data entrega:</label>
        <div class="col-md-10">
            <input type="datetime" name="dataEntrega" class="form-control" value="@DateTime.Now" disabled="disabled" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
            </div>
        </div>

     <div class="form-group">
            @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Localidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Uf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Uf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Uf, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Dar Baixa" class="btn btn-danger" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar para Lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
